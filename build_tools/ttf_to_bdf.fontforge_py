#!/usr/bin/env -S fontforge -lang=py -script
"""Converts .ttf files (distribution format) to .bdf (X11 bitmap format)
This script runs in fontforge's embedded Python interpreter."""

import fontforge
import subprocess
import sys
from pathlib import Path

top_dir = Path(__file__).parent.parent
try: top_dir = top_dir.relative_to(Path.cwd())
except ValueError: pass

ttf_dir = top_dir / "original_ttfs"
ttf_paths = list(sorted(ttf_dir.glob("**/*.ttf")))
if not ttf_paths: raise SystemExit(f"💥 Missing: {ttf_dir}/**/*.ttf")

bdf_dir = top_dir / "processed_bdfs"
bdf_dir.mkdir(exist_ok=True)

for ttf_path in ttf_paths:
    print(f"\n🔠 Converting: {ttf_path}")
    ttf_font = fontforge.open(str(ttf_path))

    pixel_size = ttf_font.em // 128
    print(f"↕️ Generating bitmap: size={ttf_font.em} => pixels={pixel_size}")
    ttf_font.selection.all()
    ttf_font.bitmapSizes = ((pixel_size,),)
    ttf_font.regenBitmaps(ttf_font.bitmapSizes)

    for old_path in bdf_dir.glob(ttf_path.stem + "-*.bdf"):
        print(f"🗑️ Removing: {old_path}")
        old_path.unlink()

    bdf_path = bdf_dir / ttf_path.with_suffix(".bdf").name
    print(f"👾 Saving bitmap: {bdf_path}")
    ttf_font.generate(str(bdf_path))
    ttf_font.close()

print(f"\n🏁 Updated {len(ttf_paths)} .bdf font files")
